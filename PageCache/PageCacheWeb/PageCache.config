<?xml version="1.0" encoding="utf-8" ?>
<!--
PageCache     配置文件

enable        是否启用 pageCache
readOnly      是否设置为只读模式，设置为只读模式之后，不再重新生成缓存
typePrefix    缓存前缀
refreshKey    刷新用的key
errorLogPath  错误日志目录  如果为空则不创建错误日志
accessLogPath 访问日志目录  如果为空则不创建访问日志

netReceiveTimeout 获取源页面数据超时时间
netSendTimeout    获取源页面发送等待时间
headersFilters    过滤源页面输出的 http头

storeBufferSize   存储队列缓冲区大小

-->

<pageCache
 
	enable="true"
	readOnly="true"
	typePrefix="mm"
	refreshKey="__refresh__"
  statusKey="__status__"
	errorLogPath="E:\PageCache\ErrorLog\"
	accessLogPath="E:\PageCache\AccessLog\"
	netReceiveTimeout="10"
	netSendTimeout="3"
	headersFilters="X-"
  storeBufferSize="100">

  <!--
  对应状态码默认的缓存时长（秒钟）  
  
  200 状态缓存 3600 秒
  400-599 状态缓存 0秒
  其它的缓存 1800 秒
  -->
  <expires>
    <expire code="*" seconds="1800" />
    <expire code="400-599" seconds="0" />
    <expire code="200" seconds="3600" />
  </expires>

  <!--
  各种存储器
  可以使用 mysql存储器 sqlite sqlserver mongodb 等也可以混合使用
  这里
  -->
  <stores>

    <!--<store name="db1" weight="50" connectionString="Server=localhost;Database=pagecache;Uid=root;Pwd=123456;" assemblyName="PageCache.Store.MySql, Version=1.0.0.0, Culture=neutral, PublicKeyToken=a91d1f4aebf531e6" fullTypeName="PageCache.Store.MySql.MySqlStore" />-->


    <!--
    sqlite  存储器
    name    是存储器的唯一标示
    weight  权重，当有多个存储器的时候有效，数值在 0-100之间，表示访问到此存储器的几率
    connectionString 是链接字符串，这里是sqlite 存储器，使用的是文件所在路径
    assemblyName    是程序集的强名称
    fullTypeName    是类型名称
    -->
    <store name="db2" weight="100" connectionString="H:\PageCache" assemblyName="PageCache.Store.SQLite, Version=1.0.0.0, Culture=neutral, PublicKeyToken=a91d1f4aebf531e6" fullTypeName="PageCache.Store.SQLite.SQLiteStore" />


  </stores>


  <!--
    源主机组可以有多个
  -->

  <hosts>

    <!--
    默认源主机，生成缓存的时候 会请求源主机 获得网页内容，然后保存到 存储器中，再发送给 用户
    用户再次访问的时候，不再访问源主机
    
    name  源主机唯一标示
    domain  要发送的域名，可以为空
    scheme  协议，可以使 http https 等
    -->
    <host name="default" domain="localhost" scheme="http">

      <!--
      可以定义多个源，
      weight  权重，当有多个多个源的时候有效，数值在 0-100之间，表示访问到此源的几率
      -->
      
      <address name="local" weight="20" ip="127.0.0.1" port="80" />
      <address name="s1" weight="20" ip="127.0.0.1" port="80" />
      <address name="s2" weight="20" ip="127.0.0.1" port="80" />
    </host>
  </hosts>


  <!--
  
  内存缓存规则
  clearSeconds  多久进行一次清理 （秒）
  removeSeconds 缓存保存时长（秒）
  queueCount    当请求并发达到此数值之后，设置为内存缓存
  capacity      内存缓存容量
  -->
  <!--
  已移除此功能
  <memoryRule clearSeconds="5" removeSeconds="5" queueCount="3" capacity="256" />
  -->

  <!--
  url 监控规则
  
  -->
  <rules>
    <!--
    name    规则名称
    match   正则表达式 匹配要缓存的url
    action  映射到的相对地址
    host    对应的源主机标示，默认default   对应节点 pageCache > hosts > host[name=default]
    cacheSeconds  缓存时长（秒）
    createFirst 创建优先
    -->
    <rule name="test" match="test(\d+)" action="/default.aspx" host="default" cacheSeconds="600" createFirst="true">
      <!--
      此 url 需要接收的参数      
      type 标示类型，可以使 GET POST HEADER 
      value 是默认值 可以使用 match 匹配到的参数 
      $1 表示第一个括号匹配到的内容
      pattern 标示正则，如果接收到的参数值 匹配到该正则，则发送给源页面
      -->
      <params>
        <param name="id" type="GET" value="$1" />
        <param name="idpost" type="POST" value="$1" />
        <param name="idheader"  type="HEADER" value="$1" />
        <param name="User-Agent" type="HEADER" pattern="(mac|android)" ignoreCase="true" />
      </params>
    </rule>


  </rules>
</pageCache>